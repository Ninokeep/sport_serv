openapi: 3.0.0
info:
  title: API TFE Documentation
  description: api en js avec le framework expressJS.
  version: 0.1.9
servers:
  - url: http://localhost:8001/
    description: Par défaut j'ai mis le port 8001, il faut le changer le fichier .env

paths:
  /kine/create-patient:
    post:
      tags:
        - "Kine"
      summary: Retourne un objet Patient.
      requestBody:
        description: Optional description in *Markdown*
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Patient'
      responses:
        '200':    # status code
          description: un objet  avec success et response qui retourne un objet patient
          content:
            application/json: 
              schema: 
                $ref: '#/components/schemas/SuccessCreate'
        '404': 
          description: si un champ est vide ou ne correspond pas au type attendu
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorValidation'

  /kine/update-patient:
    put:
      tags:
        - "Kine"
      summary: Retourne  un tableau  de [0 ou 1].
      requestBody:
        description: Optional description in *Markdown*
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Patient'
      responses:
        '200':    # status code
          description: La réponse de retour sera un tableau avec la valeur 1 
          content:
            application/json: 
              schema: 
                $ref: '#/components/schemas/SuccessUpdate'
        '404': 
          description:  Un tableau qui contient un 0
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorValidation'                

  /kine/delete-patient:
    delete:
      tags:
        - "Kine"
      summary: Retourne null ou un objet Patient
      requestBody:
        description: Optional description in *Markdown*
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Patient'
      responses:
        '200':    # status code
          description: la réponse de retout sera null s'il n'a pas trouvé le patient sinon il renvoie un objet de type Patient s'il a trouvé et supprimé le patient.
          content:
            application/json: 
              schema: 
                $ref: '#/components/schemas/SuccessDelete'
        '404': 
          description:  la réponse est null car il n'a pas trouvé le patient.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorValidation'                
                  
  /kine/get-patient:
   get:
      tags:
        - "Kine"
      summary: Retourne un objet Patient.
      responses:
        '200':    # status code
          description: un tableau  avec un ou plusieurs Patient
          content:
            application/json: 
              schema: 
                oneOf:
                  - $ref: '#/components/schemas/responseSuccess'
                  - $ref: '#/components/schemas/Patient'
                example:
                  success : True
                  response : [{"id": 47,
                      "nom": "drake",
                      "prenom": "grahbam",
                      "email": "drakee@gmail.com",
                      "password": "$2b$12$w/d0l0yFSKMMVEgpSDbRlu3q5vHL3oVAEmX7g11AFi2LmVa34o8SO",
                      "sexe": false,
                      "rule": false,
                      "age": 27,
                      "numero_telephone": "0494425180",
                      "pathologie": "tendinite jambe droite",
                      "seance_restante": 15,
                      "id_kine": 5}]
                  
        '401': 
          $ref: '#/components/responses/UnauthorizedErrors'

  /kine/create-entrainement:
    post:
      tags:
        - Entrainement
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/responseSuccess'
                  - $ref: '#/components/schemas/Entrainement'
              example:
                  success : True
                  response : {
                      "id": 47,
                      "nom": "drake",
                      "niveau": "debutant",
                      "commentaire":"entrainement difficile",
                      "gif":null,
                      "id_kine": 5}
        '400':
          description: mauvaise requête l'id doit être un nombre et supérieur à 0
        '401':
          description: Aucun accès  à cette ressource
        '404':
          description: l'id du kiné n'a pas été trouvé
        '500':
          description: Erreur venant du serveur
components:
  schemas:
    Entrainement:
      type: object
      properties:
        id: 
          type: integer
          format: int64
        nom:
          type: string
        niveau:
          type: string
        gif:
          type: string
        commentaire:
          type: string
        id_kine:
          type: integer
      required:
        - id
        - nom
        - niveau
        - commentaire
        - id_kine
    Patient:
      type: object
      properties:
        id:
          type: integer
          format: int64
        nom:
          type: string
        prenom:
          type: string
        password:
          type: string
          format: password
          minLength: 8
        email:
          type: string
          format: email
        age : 
          type: number
        sexe : 
          type: boolean
          description: false = girl and true = men
        pathologie:
          type: string
        numero_telephone :
          type: string
        seance_restante : 
          type: number
      required:
        - nom
        - prenom
        - email
        - password
        - seance_restante
        - pathologie
        - age
        - sexe
        - 'numero_telephone'
    ErrorValidation:
      type: object
      properties:
        success:
          type: boolean
        response:
          type: object
          properties:
            errors:
              type: object
              properties:
                value:
                  type: string
                  description: valeur du champ
                msg:
                  type: string
                  description: le champ ne peut pas être vide
                param:
                  type: string
                  description: "champ_name"
                location:
                  type: string
                  description: "body"
    SuccessCreate:
      type: object
      properties:
        success:
          type: boolean
        response:
          type: object
          properties:
            id:
              type: integer
              format: int64
            nom:
              type: string
            prenom:
              type: string
            password:
              type: string
              format: password
              minLength: 8
            email:
              type: string
              format: email
            age : 
              type: number
            sexe : 
              type: boolean
              description: false = girl and true = men
            pathologie:
              type: string
            numero_telephone :
              type: string
            seance_restante : 
              type: number
    SuccessUpdate:
      type: object

      properties:
        success:
          type: boolean
        responses:
          type: array
          items:
            type: boolean
            description: >
              Réponse possible:
                * `0` - False, Pas de changement ou erreur lors de l'update
                * `1` - True, Le changement a bien été appliqué     
    SuccessDelete:
      type: object

      properties:
        success:
          type: boolean
        responses:
          type: object
          $ref: '#/components/schemas/Patient'
    responseSuccess:
      type: object
      properties:
        success:
          type: boolean
  responses:
    UnauthorizedErrors:
      description: L'accés au token est manquant ou invalide        
  
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
  - bearerAuth : []
